{"ast":null,"code":"var _jsxFileName = \"/Users/Aa/Desktop/Social Media/client/src/pages/messenger/messenger.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport ChatOnline from \"../../components/chatOnline/chatOnline\";\nimport Conversation from \"../../components/conversation/conversation\";\nimport Message from \"../../components/message/message\";\nimport TopBar from \"../../components/topbar/topbar\";\nimport \"./messenger.css\";\nimport { AuthContext } from \"../../context/authContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  const scrollRef = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  //component hooks\n\n  //set socket\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8080\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        conversationId: currentChat === null || currentChat === void 0 ? void 0 : currentChat._id,\n        senderId: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, [currentChat]);\n\n  //\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.senderId)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  //function to get conversations from database\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(`/conversations/${user === null || user === void 0 ? void 0 : user._id}`);\n        setConversations(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getConversations();\n  }, [user]);\n\n  //function to get messages from database\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`/messages/${currentChat === null || currentChat === void 0 ? void 0 : currentChat._id}`);\n        setMessages(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  //function to send message when send button is clicked\n  const sendMessage = async e => {\n    e.preventDefault();\n    const message = {\n      conversationId: currentChat._id,\n      senderId: user._id,\n      text: newMessage\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //scroll to the last sent message\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behaviour: \"smooth\"\n    });\n  });\n\n  //send userId to and receive users from socket server\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      setOnlineUsers(user.following.filter(f => users.some(u => u.userId === f)));\n    });\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"Search For Friends\",\n            className: \"chatMenuSearch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxContainer\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.senderId === user._id,\n                  currentchat: currentChat,\n                  currentUser: user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Enter message here...\",\n                className: \"chatBoxBottomMessage\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatBoxBottomButton\",\n                onClick: sendMessage,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversation\",\n            children: \"Open a conversation to start a chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnineContainer\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineUsers: onlineUsers,\n            currentId: user._id,\n            setCurrentChat: setCurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Messenger, \"PTK6in9IMJBah10gXF6RkEvkTu8=\");\n_c = Messenger;\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","ChatOnline","Conversation","Message","TopBar","AuthContext","axios","io","Messenger","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","socket","scrollRef","user","current","on","data","conversationId","_id","senderId","text","createdAt","Date","now","members","includes","prev","getConversations","res","get","error","console","log","getMessages","sendMessage","e","preventDefault","message","receiverId","find","member","emit","post","scrollIntoView","behaviour","users","following","filter","f","some","u","userId","map","c","m","target","value"],"sources":["/Users/Aa/Desktop/Social Media/client/src/pages/messenger/messenger.jsx"],"sourcesContent":["import React, { useContext, useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport ChatOnline from \"../../components/chatOnline/chatOnline\";\nimport Conversation from \"../../components/conversation/conversation\";\nimport Message from \"../../components/message/message\";\nimport TopBar from \"../../components/topbar/topbar\";\nimport \"./messenger.css\";\nimport { AuthContext } from \"../../context/authContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\nexport default function Messenger() {\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  const scrollRef = useRef();\n  const { user } = useContext(AuthContext);\n\n  //component hooks\n\n  //set socket\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8080\");\n    socket.current.on(\"getMessage\", (data) => {\n      setArrivalMessage({\n        conversationId: currentChat?._id,\n        senderId: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n    });\n  }, [currentChat]);\n\n  //\n  useEffect(() => {\n    arrivalMessage &&\n      currentChat?.members.includes(arrivalMessage.senderId) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  //function to get conversations from database\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(`/conversations/${user?._id}`);\n        setConversations(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getConversations();\n  }, [user]);\n\n  //function to get messages from database\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`/messages/${currentChat?._id}`);\n        setMessages(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  //function to send message when send button is clicked\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const message = {\n      conversationId: currentChat._id,\n      senderId: user._id,\n      text: newMessage,\n    };\n\n    const receiverId = currentChat.members.find(\n      (member) => member !== user._id\n    );\n\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage,\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //scroll to the last sent message\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behaviour: \"smooth\" });\n  });\n\n  //send userId to and receive users from socket server\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", (users) => {\n      setOnlineUsers(\n        user.following.filter((f) => users.some((u) => u.userId === f))\n      );\n    });\n  }, [user]);\n\n  return (\n    <>\n      <TopBar />\n      <div className=\"messenger\">\n        <div className=\"chatMenu\">\n          <div className=\"chatMenuContainer\">\n            <input\n              type=\"search\"\n              placeholder=\"Search For Friends\"\n              className=\"chatMenuSearch\"\n            />\n            {conversations.map((c) => (\n              <div onClick={() => setCurrentChat(c)}>\n                <Conversation conversation={c} currentUser={user} />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"chatBox\">\n          <div className=\"chatBoxContainer\">\n            {currentChat ? (\n              <>\n                <div className=\"chatBoxTop\">\n                  {messages.map((m) => (\n                    <div ref={scrollRef}>\n                      <Message\n                        message={m}\n                        own={m.senderId === user._id}\n                        currentchat={currentChat}\n                        currentUser={user}\n                      />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"chatBoxBottom\">\n                  <textarea\n                    placeholder=\"Enter message here...\"\n                    className=\"chatBoxBottomMessage\"\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    value={newMessage}\n                  ></textarea>\n                  <button className=\"chatBoxBottomButton\" onClick={sendMessage}>\n                    Send\n                  </button>\n                </div>\n              </>\n            ) : (\n              <span className=\"noConversation\">\n                Open a conversation to start a chat\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"chatOnline\">\n          <div className=\"chatOnineContainer\">\n            <ChatOnline\n              onlineUsers={onlineUsers}\n              currentId={user._id}\n              setCurrentChat={setCurrentChat}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC5D,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,YAAY,MAAM,4CAA4C;AACrE,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,QAAQ,kBAAkB;AAAC;AAAA;AAEtC,eAAe,SAASC,SAAS,GAAG;EAAA;EAClC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMqB,MAAM,GAAGtB,MAAM,EAAE;EACvB,MAAMuB,SAAS,GAAGvB,MAAM,EAAE;EAC1B,MAAM;IAAEwB;EAAK,CAAC,GAAG1B,UAAU,CAACQ,WAAW,CAAC;;EAExC;;EAEA;EACAP,SAAS,CAAC,MAAM;IACduB,MAAM,CAACG,OAAO,GAAGjB,EAAE,CAAC,qBAAqB,CAAC;IAC1Cc,MAAM,CAACG,OAAO,CAACC,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;MACxCR,iBAAiB,CAAC;QAChBS,cAAc,EAAEhB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEiB,GAAG;QAChCC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;QACvBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,SAAS,EAAEC,IAAI,CAACC,GAAG;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACtB,WAAW,CAAC,CAAC;;EAEjB;EACAb,SAAS,CAAC,MAAM;IACdmB,cAAc,KACZN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEuB,OAAO,CAACC,QAAQ,CAAClB,cAAc,CAACY,QAAQ,CAAC,KACtDf,WAAW,CAAEsB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEnB,cAAc,CAAC,CAAC;EACpD,CAAC,EAAE,CAACA,cAAc,EAAEN,WAAW,CAAC,CAAC;;EAEjC;EACAb,SAAS,CAAC,MAAM;IACd,MAAMuC,gBAAgB,GAAG,YAAY;MACnC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAE,kBAAiBhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,GAAI,EAAC,CAAC;QAC1DlB,gBAAgB,CAAC4B,GAAG,CAACZ,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACDH,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;;EAEV;EACAzB,SAAS,CAAC,MAAM;IACd,MAAM6C,WAAW,GAAG,YAAY;MAC9B,IAAI;QACF,MAAML,GAAG,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAE,aAAY5B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEiB,GAAI,EAAC,CAAC;QAC5Dd,WAAW,CAACwB,GAAG,CAACZ,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDG,WAAW,EAAE;EACf,CAAC,EAAE,CAAChC,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMiC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,OAAO,GAAG;MACdpB,cAAc,EAAEhB,WAAW,CAACiB,GAAG;MAC/BC,QAAQ,EAAEN,IAAI,CAACK,GAAG;MAClBE,IAAI,EAAEf;IACR,CAAC;IAED,MAAMiC,UAAU,GAAGrC,WAAW,CAACuB,OAAO,CAACe,IAAI,CACxCC,MAAM,IAAKA,MAAM,KAAK3B,IAAI,CAACK,GAAG,CAChC;IAEDP,MAAM,CAACG,OAAO,CAAC2B,IAAI,CAAC,aAAa,EAAE;MACjCtB,QAAQ,EAAEN,IAAI,CAACK,GAAG;MAClBoB,UAAU;MACVlB,IAAI,EAAEf;IACR,CAAC,CAAC;IAEF,IAAI;MACF,MAAMuB,GAAG,GAAG,MAAMhC,KAAK,CAAC8C,IAAI,CAAC,WAAW,EAAEL,OAAO,CAAC;MAClDjC,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEyB,GAAG,CAACZ,IAAI,CAAC,CAAC;MACpCV,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA1C,SAAS,CAAC,MAAM;IAAA;IACd,sBAAAwB,SAAS,CAACE,OAAO,uDAAjB,mBAAmB6B,cAAc,CAAC;MAAEC,SAAS,EAAE;IAAS,CAAC,CAAC;EAC5D,CAAC,CAAC;;EAEF;EACAxD,SAAS,CAAC,MAAM;IACduB,MAAM,CAACG,OAAO,CAAC2B,IAAI,CAAC,SAAS,EAAE5B,IAAI,CAACK,GAAG,CAAC;IACxCP,MAAM,CAACG,OAAO,CAACC,EAAE,CAAC,UAAU,EAAG8B,KAAK,IAAK;MACvCnC,cAAc,CACZG,IAAI,CAACiC,SAAS,CAACC,MAAM,CAAEC,CAAC,IAAKH,KAAK,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKH,CAAC,CAAC,CAAC,CAChE;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnC,IAAI,CAAC,CAAC;EAEV,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB;UAAK,SAAS,EAAC,mBAAmB;UAAA,wBAChC;YACE,IAAI,EAAC,QAAQ;YACb,WAAW,EAAC,oBAAoB;YAChC,SAAS,EAAC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAC1B,EACDd,aAAa,CAACqD,GAAG,CAAEC,CAAC,iBACnB;YAAK,OAAO,EAAE,MAAMnD,cAAc,CAACmD,CAAC,CAAE;YAAA,uBACpC,QAAC,YAAY;cAAC,YAAY,EAAEA,CAAE;cAAC,WAAW,EAAExC;YAAK;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAEvD,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA;MACE;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,uBACtB;UAAK,SAAS,EAAC,kBAAkB;UAAA,UAC9BZ,WAAW,gBACV;YAAA,wBACE;cAAK,SAAS,EAAC,YAAY;cAAA,UACxBE,QAAQ,CAACiD,GAAG,CAAEE,CAAC,iBACd;gBAAK,GAAG,EAAE1C,SAAU;gBAAA,uBAClB,QAAC,OAAO;kBACN,OAAO,EAAE0C,CAAE;kBACX,GAAG,EAAEA,CAAC,CAACnC,QAAQ,KAAKN,IAAI,CAACK,GAAI;kBAC7B,WAAW,EAAEjB,WAAY;kBACzB,WAAW,EAAEY;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA;cAClB;gBAAA;gBAAA;gBAAA;cAAA,QAEL;YAAC;cAAA;cAAA;cAAA;YAAA,QACE,eACN;cAAK,SAAS,EAAC,eAAe;cAAA,wBAC5B;gBACE,WAAW,EAAC,uBAAuB;gBACnC,SAAS,EAAC,sBAAsB;gBAChC,QAAQ,EAAGsB,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAE;gBAC/C,KAAK,EAAEnD;cAAW;gBAAA;gBAAA;gBAAA;cAAA,QACR,eACZ;gBAAQ,SAAS,EAAC,qBAAqB;gBAAC,OAAO,EAAE6B,WAAY;gBAAA,UAAC;cAE9D;gBAAA;gBAAA;gBAAA;cAAA,QAAS;YAAA;cAAA;cAAA;cAAA;YAAA,QACL;UAAA,gBACL,gBAEH;YAAM,SAAS,EAAC,gBAAgB;YAAA,UAAC;UAEjC;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA;MACG;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAK,SAAS,EAAC,YAAY;QAAA,uBACzB;UAAK,SAAS,EAAC,oBAAoB;UAAA,uBACjC,QAAC,UAAU;YACT,WAAW,EAAEzB,WAAY;YACzB,SAAS,EAAEI,IAAI,CAACK,GAAI;YACpB,cAAc,EAAEhB;UAAe;YAAA;YAAA;YAAA;UAAA;QAC/B;UAAA;UAAA;UAAA;QAAA;MACE;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACL;AAEP;AAAC,GAxKuBJ,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}