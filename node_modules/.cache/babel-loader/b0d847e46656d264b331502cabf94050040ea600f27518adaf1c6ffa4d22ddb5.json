{"ast":null,"code":"var _jsxFileName = \"/Users/Aa/Desktop/Social Media/client/src/context/authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./authReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isFetching: false,\n  error: false\n};\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n  useEffect(() => {\n    // Check local storage for stored user information\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: user\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // Update local storage when user information changes\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","AuthReducer","initialState","user","isFetching","error","AuthContext","AuthContextProvider","children","state","dispatch","storedUser","localStorage","getItem","JSON","parse","type","payload","setItem","stringify"],"sources":["/Users/Aa/Desktop/Social Media/client/src/context/authContext.js"],"sourcesContent":["import {createContext, useEffect, useReducer} from \"react\"\nimport AuthReducer from \"./authReducer\";\n\nconst initialState = {\n    user: null,\n    isFetching: false,\n    error: false\n}\n\nexport const AuthContext = createContext(initialState);\n\nexport const AuthContextProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    useEffect(() => {\n    // Check local storage for stored user information\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: user });\n    }\n  }, []);\n\n  useEffect(() => {\n    // Update local storage when user information changes\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n    \n    \n    return (\n        <AuthContext.Provider value={{\n            user: state.user,\n            isFetching: state.isFetching,\n            error: state.error,\n            dispatch\n        }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AAC1D,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAACI,YAAY,CAAC;AAEtD,OAAO,MAAMK,mBAAmB,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,UAAU,CAACC,WAAW,EAAEC,YAAY,CAAC;EAE/DH,SAAS,CAAC,MAAM;IAChB;IACA,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACd,MAAMR,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;MACnCD,QAAQ,CAAC;QAAEM,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAEd;MAAK,CAAC,CAAC;IACpD;EACF,CAAC,EAAE,EAAE,CAAC;EAENJ,SAAS,CAAC,MAAM;IACd;IACAa,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACV,KAAK,CAACN,IAAI,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACM,KAAK,CAACN,IAAI,CAAC,CAAC;EAGd,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MACzBA,IAAI,EAAEM,KAAK,CAACN,IAAI;MAChBC,UAAU,EAAEK,KAAK,CAACL,UAAU;MAC5BC,KAAK,EAAEI,KAAK,CAACJ,KAAK;MAClBK;IACJ,CAAE;IAAA,UACGF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B,CAAC;AAAA,GA5BYD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}